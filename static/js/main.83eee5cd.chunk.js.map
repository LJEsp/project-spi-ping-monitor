{"version":3,"sources":["components/ping-item/ping-item.js","components/ping-item/ping-item-container.js","App.js","serviceWorker.js","index.js"],"names":["PingItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","p","Ping","state","pingState","pingData","_this2","useUrl","ping","url","err","data","setState","concat","domain","react_default","a","createElement","className","href","target","rel","style","color","Component","PingItemContainer","ping_item","name","App","refresh","onRefresh","bind","assertThisInitialized","e","preventDefault","console","log","onClick","ping_item_container","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83eee5cd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Ping from \"ping.js\";\r\n// import webping from \"web-pingjs\";\r\n\r\nclass PingItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.p = new Ping();\r\n\r\n    this.state = {\r\n      pingState: \"-\",\r\n      pingData: \"-\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.useUrl) {\r\n      this.p.ping(`http://www.${this.props.domain}`, (err, data) => {\r\n        if (err) {\r\n          return this.setState({ pingState: \"DOWN\", pingData: \"\" });\r\n        }\r\n\r\n        this.setState({ pingState: \"UP\", pingData: data });\r\n      });\r\n    } else {\r\n      this.p.ping(this.props.url, (err, data) => {\r\n        if (err) {\r\n          return this.setState({ pingState: \"DOWN\", pingData: \"\" });\r\n        }\r\n\r\n        this.setState({ pingState: \"UP\", pingData: data });\r\n      });\r\n    }\r\n\r\n    // webping(this.props.url)\r\n    //   .then(delta => {\r\n    //     console.log(\r\n    //       `${this.props.name}` + \" ping time was \" + String(delta) + \" ms\"\r\n    //     );\r\n    //   })\r\n    //   .catch(function(err) {\r\n    //     console.error(\"Could not ping remote URL\", err);\r\n    //   });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ping-item\">\r\n        <a href={this.props.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {this.props.domain}\r\n        </a>{\" \"}\r\n\r\n        <span\r\n          style={\r\n            this.state.pingState === \"DOWN\"\r\n              ? { color: \"red\" }\r\n              : { color: \"green\" }\r\n          }\r\n        >\r\n          {this.state.pingState}{\" \"}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PingItem;\r\n","import React, { Component } from \"react\";\r\nimport PingItem from \"./ping-item\";\r\n\r\nclass PingItemContainer extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <PingItem\r\n          domain=\"google.com\"\r\n          url=\"http://www.google.com\"\r\n          name=\"Google\"\r\n        />\r\n        <PingItem\r\n          domain=\"facebook.com\"\r\n          url=\"http://www.facebook.com\"\r\n          name=\"Facebook\"\r\n        />\r\n        <PingItem\r\n          domain=\"github.com\"\r\n          url=\"http://www.github.com\"\r\n          name=\"Github\"\r\n        />\r\n        <PingItem\r\n          domain=\"tinypic.com\"\r\n          url=\"http://www.tinypic.com\"\r\n          name=\"TinyPic\"\r\n        />\r\n        <PingItem\r\n          domain=\"youtube.com\"\r\n          url=\"http://www.youtube.com\"\r\n          name=\"YouTube\"\r\n        />\r\n        <PingItem domain=\"baidu.com\" url=\"http://www.baidu.com\" name=\"Baidu\" />\r\n        <PingItem domain=\"reddit.com\" />\r\n        <PingItem domain=\"yahoo.com\" />\r\n        <PingItem domain=\"qq.com\t\" />\r\n        <PingItem domain=\"taobao.com\" />\r\n        <PingItem domain=\"google.co.in\" />\r\n        <PingItem domain=\"amazon.com\" />\r\n        <PingItem domain=\"tmall.com\" url=\"https://www.tmall.com\" useUrl />\r\n        <PingItem domain=\"sohu.com\" url=\"http://www.sohu.com\" useUrl />\r\n        <PingItem domain=\"instagram.com\" />\r\n        <PingItem domain=\"vk.com\" />\r\n        <PingItem domain=\"live.com\" url=\"https://outlook.live.com/owa\" useUrl />\r\n        <PingItem domain=\"jd.com\" />\r\n        <PingItem domain=\"sina.com.cn\" />\r\n        <PingItem domain=\"weibo.com\" />\r\n        <PingItem domain=\"yandex.ru\" />\r\n        <PingItem domain=\"360.cn\" />\r\n        <PingItem domain=\"google.co.jp\" />\r\n        <PingItem domain=\"google.co.uk\" />\r\n        <PingItem domain=\"list.tmall.com\" url=\"https://www.tmall.com\" useUrl />\r\n        <PingItem domain=\"google.ru\" />\r\n        <PingItem domain=\"google.com.br\" />\r\n        <PingItem domain=\"netflix.com\" />\r\n        <PingItem domain=\"google.com.hk\" />\r\n        <PingItem domain=\"twitch.tv\" />\r\n        <PingItem domain=\"google.fr\" />\r\n        <PingItem domain=\"linkedin.com\" />\r\n        <PingItem domain=\"yahoo.co.jp\" />\r\n        <PingItem domain=\"t.co\" url=\"http://t.co\" useUrl />\r\n        <PingItem domain=\"csdn.net\" url=\"https://www.csdn.net\" useUrl />\r\n        <PingItem domain=\"microsoft.com\" />\r\n        <PingItem domain=\"bing.com\" />\r\n        <PingItem domain=\"office.com\" url=\"https://www.office.com\" useUrl />\r\n        <PingItem domain=\"ebay.com\" />\r\n        <PingItem domain=\"google.it\" />\r\n        <PingItem domain=\"google.ca\" />\r\n        <PingItem domain=\"mail.ru\" />\r\n        <PingItem domain=\"ok.ru\" />\r\n        <PingItem domain=\"google.es\" />\r\n        <PingItem domain=\"msn.com\" />\r\n        <PingItem domain=\"google.com.tr\" />\r\n        <PingItem domain=\"google.com.au\" />\r\n        <PingItem domain=\"whatsapp.com\" />\r\n        <PingItem domain=\"spotify.com\" />\r\n        <PingItem domain=\"google.pl\" />\r\n        <PingItem domain=\"google.co.id\" />\r\n        <PingItem domain=\"google.com.ar\" />\r\n        <PingItem domain=\"google.co.th\" />\r\n        <PingItem domain=\"Naver.com\" />\r\n        <PingItem domain=\"sogou.com\" />\r\n        <PingItem\r\n          domain=\"samsung.com\"\r\n          url=\"https://www.samsung.com/ph\"\r\n          useUrl\r\n        />\r\n        <PingItem domain=\"accuweather.com\" />\r\n        <PingItem domain=\"goo.gl\" />\r\n        <PingItem domain=\"sm.cn\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PingItemContainer;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport PingItemContainer from \"./components/ping-item/ping-item-container\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      refresh: 0\n    };\n\n    this.onRefresh = this.onRefresh.bind(this);\n  }\n\n  onRefresh(e) {\n    e.preventDefault();\n\n    this.setState({ refresh: this.state.refresh + 1 }, () => {\n      console.log(this.state);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Ping Monitor</h1>\n\n        <button onClick={this.onRefresh}>Refresh</button>\n\n        <PingItemContainer key={this.state.refresh} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}